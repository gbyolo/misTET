#! /bin/bash
#
# misTET compiler
# You need this: http://closure-compiler.googlecode.com/files/compiler-latest.zip
# then extract compiler.jar in this folder
# You need also java (latest version)

# This file is part of misTET
# read /LICENSE for more information about the license.

# You can find compiled *.min.js files in system/minified/

compiler="java -jar compiler.jar --compilation_level ADVANCED_OPTIMIZATIONS"

corepath="system"
mistet="$corepath/mistet.js"
utils="$corepath/utils.js"
resource="$corepath/Resource.js"
exception="$corepath/Exception.js"
prototype="$corepath/prototype.js"

minified="$corepath/minified"

TMP="/tmp/mistet"
MODULES="modules"

codes=($mistet $utils $resource $exception $prototype)

hook_tmp() {        
    if [ -f $1 -o -e $1 ]; then
        rm -f $1
    fi        
    touch $1
    chmod 0600 $1 || {
        error "Unable to chmod ${1} "
        exit -1
    }        
}

unhook_tmp() {        
    if [ -e $1 ]; then
        rm -f $1
    fi        
}

error() {
    echo -ne "\e[1;31m${1}"
}

normal() {
	echo -ne "\e[0m"
}

sec() {
    echo -e "\e[0;34m${1}"
}

hook_tmp ${TMP}
sec "Compiling core and dependencies..." 
normal

if [ -d $minified ]; then
    rm -r $minified || {
        error "Unable to remove $minified"
        normal
        exit -1
    }
fi

mkdir &>/dev/null $minified || {
    error "Unable to create ${minified}"
    normal
    exit -1
}

for i in ${!codes[@]}
do
    if [ -a ${codes[i]} -a -s ${codes[i]} ]; then
        if [ -d ${codes[i]} ]; then
            error "'${codes[i]}' is a directory. It must be a file "
            normal
            exit -1
        fi

        if [ -r ${codes[i]} ]; then
            sec "Compiling ${codes[i]}"
            normal
            what=${codes[i]:7}
            hook_tmp "${minified}/${what%.js}.min.js"
            echo "$compiler --js '${codes[i]}' --js_output_file '${minified}/${what%.js}.min.js'"
    
            $compiler --js "${codes[i]}" --js_output_file "${minified}/${what%.js}.min.js" &>${TMP}|| {
                error "Failed to compile ${codes[i]}\n"
                normal
                echo "Take a look at ${TMP} for further information"
                unhook_tmp "${minified}/${what%.js}.min.js"
                exit -1
            }
            sec "Done\n"
            normal

        else
            error "'${codes[i]}' must have read permission "
            exit -1
        fi
        continue
    else
        error "'${codes[i]}' doesn't exist "
        exit -1
    fi
done

sleep 2
sec "Finding modules to be compiled..."
normal

unhook_tmp ${TMP}
hook_tmp ${TMP}

find ${MODULES} -type f -name "*.js" >> ${TMP} 2> /dev/null
cat -- ${TMP} | while read TARGET; do

    sec "Found file: ${TARGET}. Compiling..."
    normal
    echo "$compiler --js '${TARGET}' --js_output_file 'tmp.js'"
    hook_tmp "tmp.js"

    $compiler --js $TARGET --js_output_file 'tmp.js' &>${TMP} || {
        error "Failed to compile ${TARGET}\n"
        normal
        echo "Take a look at ${TMP} for further information"
        exit -1
    }
    unhook_tmp "tmp.js"
    sec "Done\n"
    normal
        
done

unhook_tmp ${TMP}
unhook_tmp "tmp.js"

sec "\nmisTET has been compiled successfully"
exit 0

